{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tiger\\\\Desktop\\\\ReactJS\\\\5- Use Redux\\\\Use Redux\\\\src\\\\components\\\\MyForm.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport \"./MyForm.css\";\nimport { Formik, Form, FastField, ErrorMessage } from \"formik\";\nimport * as Yup from \"yup\";\nimport swal from \"sweetalert\";\nimport ShowError from \"./ShowError\";\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport FieldControl from \"./FieldControl\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialValues = {\n  name: \"\",\n  password: \"\",\n  email: \"\",\n  bio: \"\"\n};\nconst onSubmit = (values, submitProps) => {\n  swal({\n    title: \"Info\",\n    text: `Name: ${values.name}\\nPassword: ${values.password}\\nEmail: ${values.email}`,\n    icon: \"info\"\n  });\n  submitProps.setSubmitting(false);\n  submitProps.resetForm();\n};\nconst validationSchema = Yup.object({\n  name: Yup.string().required(\"Fill the input field!\").min(4, \"The name must have at least 4 characters!\"),\n  password: Yup.string().required(\"Fill the input field!\").min(10, \"The password must have at least 10 characters!\"),\n  email: Yup.string().required(\"Fill the input field!\").email(\"incorrect format! Email foramt must be Like:\\nemail@example.com\"),\n  bio: Yup.string().required(\"Fill the input field!\").max(60, \"The biography must have a maximum of 60 characters!\")\n});\nconst MyForm = () => {\n  _s();\n  const [savedData, setSavedData] = useState(null);\n  const [myValues, setMyValues] = useState(null);\n  useEffect(() => {\n    if (localStorage.getItem(\"savedData\")) {\n      setSavedData(JSON.parse(localStorage.getItem(\"savedData\")));\n    }\n  }, []);\n  const handleSaveData = formik => {\n    localStorage.setItem(\"savedData\", JSON.stringify(formik.values));\n  };\n  const handleGetData = () => {\n    setMyValues(savedData);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"pt-1\",\n    children: /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: myValues || initialValues,\n      onSubmit: onSubmit,\n      validationSchema: validationSchema,\n      validateOnBlur: false,\n      validateOnMount: true,\n      enableReinitialize: true,\n      children: formik => {\n        return /*#__PURE__*/_jsxDEV(Form, {\n          className: \"myForm row w-50 mx-auto my-5 p-2 rounded-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"col-12 text-center\",\n            children: \"Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-12 my-3\",\n            children: /*#__PURE__*/_jsxDEV(FieldControl, {\n              control: \"input\",\n              type: \"text\",\n              name: \"name\",\n              label: \"Full name\",\n              placeHolder: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-12 my-3\",\n            children: /*#__PURE__*/_jsxDEV(FieldControl, {\n              control: \"input\",\n              type: \"password\",\n              name: \"password\",\n              label: \"Password\",\n              placeHolder: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-12 my-3\",\n            children: /*#__PURE__*/_jsxDEV(FieldControl, {\n              control: \"input\",\n              type: \"email\",\n              name: \"email\",\n              label: \"Email\",\n              placeHolder: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-12 my-3\",\n            children: /*#__PURE__*/_jsxDEV(FieldControl, {\n              control: \"textarea\",\n              name: \"bio\",\n              label: \"Biography\",\n              placeHolder: \"Biography\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-4 mb-2 text-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"btn btn-light border-dark btn-lg\",\n              disabled: !(formik.dirty && formik.isValid) || formik.isSubmitting,\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"reset\",\n              className: \"btn btn-dark border-light btn-lg ms-3\",\n              children: \"Reset\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 37\n            }, this), formik.isValid && formik.dirty ? /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"btn btn-warning border-dark btn-lg ms-3\",\n              onClick: () => handleSaveData(formik),\n              children: \"Save Data\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 41\n            }, this) : null, savedData ? /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"btn btn-danger border-dark btn-lg ms-3\",\n              onClick: handleGetData,\n              children: \"Get Data\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 41\n            }, this) : null]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 25\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n};\n_s(MyForm, \"Ihg1F08VkwIhhl3jJgVc0uHieV0=\");\n_c = MyForm;\nexport default MyForm;\nvar _c;\n$RefreshReg$(_c, \"MyForm\");","map":{"version":3,"names":["React","Formik","Form","FastField","ErrorMessage","Yup","swal","ShowError","useState","useEffect","FieldControl","initialValues","name","password","email","bio","onSubmit","values","submitProps","title","text","icon","setSubmitting","resetForm","validationSchema","object","string","required","min","max","MyForm","savedData","setSavedData","myValues","setMyValues","localStorage","getItem","JSON","parse","handleSaveData","formik","setItem","stringify","handleGetData","dirty","isValid","isSubmitting"],"sources":["C:/Users/tiger/Desktop/ReactJS/5- Use Redux/Use Redux/src/components/MyForm.jsx"],"sourcesContent":["import React from \"react\";\r\nimport \"./MyForm.css\";\r\nimport { Formik , Form , FastField , ErrorMessage } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport swal from \"sweetalert\";\r\nimport ShowError from \"./ShowError\";\r\nimport { useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport FieldControl from \"./FieldControl\";\r\n\r\n\r\nconst initialValues = {\r\n    name : \"\" ,\r\n    password : \"\" ,\r\n    email : \"\" ,\r\n    bio : \"\"\r\n}\r\n\r\nconst onSubmit = (values , submitProps) => {\r\n    swal({\r\n        title : \"Info\" ,\r\n        text : `Name: ${values.name}\\nPassword: ${values.password}\\nEmail: ${values.email}` ,\r\n        icon : \"info\"\r\n    })\r\n    submitProps.setSubmitting(false);\r\n    submitProps.resetForm();\r\n}\r\n\r\nconst validationSchema = Yup.object({\r\n    name : Yup.string().required(\"Fill the input field!\").min(4 , \"The name must have at least 4 characters!\") ,\r\n    password : Yup.string().required(\"Fill the input field!\").min(10 , \"The password must have at least 10 characters!\") ,\r\n    email : Yup.string().required(\"Fill the input field!\").email(\"incorrect format! Email foramt must be Like:\\nemail@example.com\") ,\r\n    bio : Yup.string().required(\"Fill the input field!\").max(60 , \"The biography must have a maximum of 60 characters!\")\r\n})\r\n\r\n\r\nconst MyForm = () => {\r\n    const [savedData , setSavedData] = useState(null);\r\n    const [myValues , setMyValues] = useState(null);\r\n\r\n    useEffect(() => {\r\n        if(localStorage.getItem(\"savedData\")) {\r\n            setSavedData(JSON.parse(localStorage.getItem(\"savedData\")));\r\n        }\r\n    }, []);\r\n\r\n    const handleSaveData = (formik) => {\r\n        localStorage.setItem(\"savedData\" , JSON.stringify(formik.values))\r\n    }\r\n\r\n    const handleGetData = () => {\r\n        setMyValues(savedData);\r\n    }\r\n\r\n    return (\r\n        <div className=\"pt-1\">\r\n            <Formik\r\n            initialValues={myValues || initialValues}\r\n            onSubmit={onSubmit}\r\n            validationSchema={validationSchema}\r\n            validateOnBlur={false}\r\n            validateOnMount\r\n            enableReinitialize\r\n            >\r\n                {formik => {\r\n                    return(\r\n                        <Form className=\"myForm row w-50 mx-auto my-5 p-2 rounded-4\">\r\n                            <h3 className=\"col-12 text-center\">Title</h3>\r\n                            <div className=\"col-12 my-3\">\r\n                                <FieldControl \r\n                                control=\"input\" \r\n                                type=\"text\" \r\n                                name=\"name\" \r\n                                label=\"Full name\" \r\n                                placeHolder=\"Name\"\r\n                                />\r\n                            </div>\r\n                            <div className=\"col-12 my-3\">\r\n                                <FieldControl \r\n                                control=\"input\" \r\n                                type=\"password\" \r\n                                name=\"password\" \r\n                                label=\"Password\" \r\n                                placeHolder=\"Password\"\r\n                                />\r\n                            </div>\r\n                            <div className=\"col-12 my-3\">\r\n                                <FieldControl \r\n                                control=\"input\" \r\n                                type=\"email\" \r\n                                name=\"email\" \r\n                                label=\"Email\" \r\n                                placeHolder=\"Email\"\r\n                                />\r\n                            </div>\r\n                            <div className=\"col-12 my-3\">\r\n                                <FieldControl \r\n                                control=\"textarea\" \r\n                                name=\"bio\" \r\n                                label=\"Biography\" \r\n                                placeHolder=\"Biography\"\r\n                                />\r\n                            </div>\r\n                            <div className=\"mt-4 mb-2 text-center\">\r\n                                    <button type=\"submit\" className=\"btn btn-light border-dark btn-lg\" \r\n                                    disabled={!(formik.dirty && formik.isValid) || formik.isSubmitting}>\r\n                                        Submit\r\n                                    </button>\r\n                                    <button type=\"reset\" className=\"btn btn-dark border-light btn-lg ms-3\">\r\n                                        Reset\r\n                                    </button>\r\n                                    {formik.isValid && formik.dirty ? (\r\n                                        <button type=\"button\" className=\"btn btn-warning border-dark btn-lg ms-3\"\r\n                                        onClick={() => handleSaveData(formik)}>\r\n                                            Save Data\r\n                                        </button>\r\n                                    ) : null}\r\n                                    {savedData ? (\r\n                                        <button type=\"button\" className=\"btn btn-danger border-dark btn-lg ms-3\"\r\n                                        onClick={handleGetData}>\r\n                                            Get Data\r\n                                        </button>\r\n                                    ) : null}\r\n                            </div>\r\n                        </Form>\r\n                    )\r\n                }}\r\n            </Formik>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MyForm;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,cAAc;AACrB,SAASC,MAAM,EAAGC,IAAI,EAAGC,SAAS,EAAGC,YAAY,QAAQ,QAAQ;AACjE,OAAO,KAAKC,GAAG,MAAM,KAAK;AAC1B,OAAOC,IAAI,MAAM,YAAY;AAC7B,OAAOC,SAAS,MAAM,aAAa;AACnC,SAASC,QAAQ,QAAQ,OAAO;AAChC,SAASC,SAAS,QAAQ,OAAO;AACjC,OAAOC,YAAY,MAAM,gBAAgB;AAAC;AAG1C,MAAMC,aAAa,GAAG;EAClBC,IAAI,EAAG,EAAE;EACTC,QAAQ,EAAG,EAAE;EACbC,KAAK,EAAG,EAAE;EACVC,GAAG,EAAG;AACV,CAAC;AAED,MAAMC,QAAQ,GAAG,CAACC,MAAM,EAAGC,WAAW,KAAK;EACvCZ,IAAI,CAAC;IACDa,KAAK,EAAG,MAAM;IACdC,IAAI,EAAI,SAAQH,MAAM,CAACL,IAAK,eAAcK,MAAM,CAACJ,QAAS,YAAWI,MAAM,CAACH,KAAM,EAAC;IACnFO,IAAI,EAAG;EACX,CAAC,CAAC;EACFH,WAAW,CAACI,aAAa,CAAC,KAAK,CAAC;EAChCJ,WAAW,CAACK,SAAS,EAAE;AAC3B,CAAC;AAED,MAAMC,gBAAgB,GAAGnB,GAAG,CAACoB,MAAM,CAAC;EAChCb,IAAI,EAAGP,GAAG,CAACqB,MAAM,EAAE,CAACC,QAAQ,CAAC,uBAAuB,CAAC,CAACC,GAAG,CAAC,CAAC,EAAG,2CAA2C,CAAC;EAC1Gf,QAAQ,EAAGR,GAAG,CAACqB,MAAM,EAAE,CAACC,QAAQ,CAAC,uBAAuB,CAAC,CAACC,GAAG,CAAC,EAAE,EAAG,gDAAgD,CAAC;EACpHd,KAAK,EAAGT,GAAG,CAACqB,MAAM,EAAE,CAACC,QAAQ,CAAC,uBAAuB,CAAC,CAACb,KAAK,CAAC,iEAAiE,CAAC;EAC/HC,GAAG,EAAGV,GAAG,CAACqB,MAAM,EAAE,CAACC,QAAQ,CAAC,uBAAuB,CAAC,CAACE,GAAG,CAAC,EAAE,EAAG,qDAAqD;AACvH,CAAC,CAAC;AAGF,MAAMC,MAAM,GAAG,MAAM;EAAA;EACjB,MAAM,CAACC,SAAS,EAAGC,YAAY,CAAC,GAAGxB,QAAQ,CAAC,IAAI,CAAC;EACjD,MAAM,CAACyB,QAAQ,EAAGC,WAAW,CAAC,GAAG1B,QAAQ,CAAC,IAAI,CAAC;EAE/CC,SAAS,CAAC,MAAM;IACZ,IAAG0B,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,EAAE;MAClCJ,YAAY,CAACK,IAAI,CAACC,KAAK,CAACH,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC;IAC/D;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMG,cAAc,GAAIC,MAAM,IAAK;IAC/BL,YAAY,CAACM,OAAO,CAAC,WAAW,EAAGJ,IAAI,CAACK,SAAS,CAACF,MAAM,CAACvB,MAAM,CAAC,CAAC;EACrE,CAAC;EAED,MAAM0B,aAAa,GAAG,MAAM;IACxBT,WAAW,CAACH,SAAS,CAAC;EAC1B,CAAC;EAED,oBACI;IAAK,SAAS,EAAC,MAAM;IAAA,uBACjB,QAAC,MAAM;MACP,aAAa,EAAEE,QAAQ,IAAItB,aAAc;MACzC,QAAQ,EAAEK,QAAS;MACnB,gBAAgB,EAAEQ,gBAAiB;MACnC,cAAc,EAAE,KAAM;MACtB,eAAe;MACf,kBAAkB;MAAA,UAEbgB,MAAM,IAAI;QACP,oBACI,QAAC,IAAI;UAAC,SAAS,EAAC,4CAA4C;UAAA,wBACxD;YAAI,SAAS,EAAC,oBAAoB;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAAW,eAC7C;YAAK,SAAS,EAAC,aAAa;YAAA,uBACxB,QAAC,YAAY;cACb,OAAO,EAAC,OAAO;cACf,IAAI,EAAC,MAAM;cACX,IAAI,EAAC,MAAM;cACX,KAAK,EAAC,WAAW;cACjB,WAAW,EAAC;YAAM;cAAA;cAAA;cAAA;YAAA;UAChB;YAAA;YAAA;YAAA;UAAA,QACA,eACN;YAAK,SAAS,EAAC,aAAa;YAAA,uBACxB,QAAC,YAAY;cACb,OAAO,EAAC,OAAO;cACf,IAAI,EAAC,UAAU;cACf,IAAI,EAAC,UAAU;cACf,KAAK,EAAC,UAAU;cAChB,WAAW,EAAC;YAAU;cAAA;cAAA;cAAA;YAAA;UACpB;YAAA;YAAA;YAAA;UAAA,QACA,eACN;YAAK,SAAS,EAAC,aAAa;YAAA,uBACxB,QAAC,YAAY;cACb,OAAO,EAAC,OAAO;cACf,IAAI,EAAC,OAAO;cACZ,IAAI,EAAC,OAAO;cACZ,KAAK,EAAC,OAAO;cACb,WAAW,EAAC;YAAO;cAAA;cAAA;cAAA;YAAA;UACjB;YAAA;YAAA;YAAA;UAAA,QACA,eACN;YAAK,SAAS,EAAC,aAAa;YAAA,uBACxB,QAAC,YAAY;cACb,OAAO,EAAC,UAAU;cAClB,IAAI,EAAC,KAAK;cACV,KAAK,EAAC,WAAW;cACjB,WAAW,EAAC;YAAW;cAAA;cAAA;cAAA;YAAA;UACrB;YAAA;YAAA;YAAA;UAAA,QACA,eACN;YAAK,SAAS,EAAC,uBAAuB;YAAA,wBAC9B;cAAQ,IAAI,EAAC,QAAQ;cAAC,SAAS,EAAC,kCAAkC;cAClE,QAAQ,EAAE,EAAEA,MAAM,CAACI,KAAK,IAAIJ,MAAM,CAACK,OAAO,CAAC,IAAIL,MAAM,CAACM,YAAa;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA,QAE1D,eACT;cAAQ,IAAI,EAAC,OAAO;cAAC,SAAS,EAAC,uCAAuC;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA,QAE7D,EACRN,MAAM,CAACK,OAAO,IAAIL,MAAM,CAACI,KAAK,gBAC3B;cAAQ,IAAI,EAAC,QAAQ;cAAC,SAAS,EAAC,yCAAyC;cACzE,OAAO,EAAE,MAAML,cAAc,CAACC,MAAM,CAAE;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA,QAE7B,GACT,IAAI,EACPT,SAAS,gBACN;cAAQ,IAAI,EAAC,QAAQ;cAAC,SAAS,EAAC,wCAAwC;cACxE,OAAO,EAAEY,aAAc;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA,QAEd,GACT,IAAI;UAAA;YAAA;YAAA;YAAA;UAAA,QACV;QAAA;UAAA;UAAA;UAAA;QAAA,QACH;MAEf;IAAC;MAAA;MAAA;MAAA;IAAA;EACI;IAAA;IAAA;IAAA;EAAA,QACP;AAEd,CAAC;AAAA,GA9FKb,MAAM;AAAA,KAANA,MAAM;AAgGZ,eAAeA,MAAM;AAAC;AAAA"},"metadata":{},"sourceType":"module"}