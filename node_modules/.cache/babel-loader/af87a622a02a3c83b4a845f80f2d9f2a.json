{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tiger\\\\Desktop\\\\ReactJS\\\\5- Use Redux\\\\Use Redux\\\\src\\\\components\\\\FieldControl.jsx\";\nimport { ErrorMessage, FastField } from 'formik';\nimport React, { Fragment } from 'react';\nimport ShowError from './ShowError';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst FieldControl = props => {\n  const {\n    control,\n    type,\n    name,\n    label,\n    placeHolder,\n    options\n  } = props;\n  switch (control) {\n    case \"input\":\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"form-label\",\n          for: name,\n          children: label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FastField, {\n          type: type,\n          className: \"form-control mb-1\",\n          placeHolder: placeHolder,\n          id: name,\n          name: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          name: name,\n          component: ShowError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true);\n      break;\n    case \"textarea\":\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"form-label\",\n          for: name,\n          children: label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FastField, {\n          className: \"form-control mb-1\",\n          placeHolder: placeHolder,\n          id: name,\n          name: name,\n          component: control\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          name: name,\n          component: ShowError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true);\n      break;\n    case \"radio\":\n      return /*#__PURE__*/_jsxDEV(FastField, {\n        name: name,\n        id: name,\n        children: _ref => {\n          let {\n            field\n          } = _ref;\n          return options.map(option => {\n            return /*#__PURE__*/_jsxDEV(Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"radio\",\n                id: option.id,\n                ...field,\n                value: option.value,\n                checked: field.value == option.value\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 36,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: option.id,\n                children: label\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 38,\n                columnNumber: 37\n              }, this)]\n            }, option.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 33\n            }, this);\n          });\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this);\n      break;\n    case \"checkbox\":\n      return /*#__PURE__*/_jsxDEV(FastField, {\n        name: name,\n        id: name,\n        children: _ref2 => {\n          let {\n            field\n          } = _ref2;\n          return options.map(option => {\n            return /*#__PURE__*/_jsxDEV(Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"radio\",\n                id: `${option.value}_id`,\n                ...field,\n                value: option.value,\n                checked: field.value == option.value\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: `${option.value}_id`,\n                children: label\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 37\n              }, this)]\n            }, option.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 33\n            }, this);\n          });\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this);\n      break;\n    default:\n      return null;\n      break;\n  }\n};\n_c = FieldControl;\nexport default FieldControl;\nvar _c;\n$RefreshReg$(_c, \"FieldControl\");","map":{"version":3,"names":["ErrorMessage","FastField","React","Fragment","ShowError","FieldControl","props","control","type","name","label","placeHolder","options","field","map","option","id","value"],"sources":["C:/Users/tiger/Desktop/ReactJS/5- Use Redux/Use Redux/src/components/FieldControl.jsx"],"sourcesContent":["import { ErrorMessage, FastField } from 'formik';\r\nimport React, { Fragment } from 'react'\r\nimport ShowError from './ShowError';\r\n\r\nconst FieldControl = (props) => {\r\n    const {control , type , name , label , placeHolder , options} = props;\r\n\r\n    switch (control) {\r\n        case \"input\":\r\n            return (\r\n                <>\r\n                    <label className=\"form-label\" for={name}>{label}</label>\r\n                    <FastField type={type} className=\"form-control mb-1\" placeHolder={placeHolder} id={name} name={name} />\r\n                    <ErrorMessage name={name} component={ShowError} />\r\n                </>\r\n            );\r\n            break;\r\n\r\n        case \"textarea\":\r\n            return (\r\n                <>\r\n                    <label className=\"form-label\" for={name}>{label}</label>\r\n                    <FastField className=\"form-control mb-1\" placeHolder={placeHolder} id={name} name={name} component={control} />\r\n                    <ErrorMessage name={name} component={ShowError} />\r\n                </>\r\n            );\r\n            break;\r\n        \r\n        case \"radio\":\r\n            return(\r\n                <FastField name={name} id={name}>\r\n                    {({field}) => {\r\n                        return options.map(option => {\r\n                            return (\r\n                                <Fragment key={option.id}>\r\n                                    <input type=\"radio\" id={option.id} {...field} value={option.value} \r\n                                    checked={field.value == option.value} />\r\n                                    <label htmlFor={option.id}>{label}</label>\r\n                                </Fragment>\r\n                            )\r\n                        })\r\n                    }}\r\n                </FastField>\r\n            )\r\n            break;\r\n\r\n        case \"checkbox\":\r\n            return(\r\n                <FastField name={name} id={name}>\r\n                    {({field}) => {\r\n                        return options.map(option => {\r\n                            return (\r\n                                <Fragment key={option.id}>\r\n                                    <input type=\"radio\" id={`${option.value}_id`} {...field} value={option.value} \r\n                                    checked={field.value == option.value} />\r\n                                    <label htmlFor={`${option.value}_id`}>{label}</label>\r\n                                </Fragment>\r\n                            )\r\n                        })\r\n                    }}\r\n                </FastField>\r\n            )\r\n            break;\r\n    \r\n        default:\r\n            return null;\r\n            break;\r\n    }\r\n}\r\n\r\nexport default FieldControl;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}