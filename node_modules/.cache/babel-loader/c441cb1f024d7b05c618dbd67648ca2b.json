{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tiger\\\\Desktop\\\\ReactJS\\\\5- Use Redux\\\\Use Redux\\\\src\\\\components\\\\FieldControl.jsx\";\nimport { ErrorMessage, FastField } from 'formik';\nimport React, { Fragment } from 'react';\nimport ShowError from './ShowError';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst FieldControl = props => {\n  const {\n    control,\n    type,\n    name,\n    label,\n    placeHolder,\n    options\n  } = props;\n  switch (control) {\n    case \"input\":\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"form-label\",\n          htmlFor: name,\n          children: label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FastField, {\n          type: type,\n          className: \"form-control mb-1\",\n          placeholder: placeHolder,\n          id: name,\n          name: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          name: name,\n          component: ShowError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true);\n    case \"textarea\":\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"form-label\",\n          htmlFor: name,\n          children: label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FastField, {\n          className: \"form-control mb-1\",\n          placeholder: placeHolder,\n          id: name,\n          name: name,\n          component: control\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          name: name,\n          component: ShowError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true);\n    case \"select\":\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: name,\n          className: \"me-3\",\n          children: label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FastField, {\n          name: name,\n          id: name,\n          as: \"select\",\n          children: options.map(option => {\n            return /*#__PURE__*/_jsxDEV(\"option\", {\n              value: option.id,\n              children: option.value\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 33\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true);\n    case \"radio\":\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: name,\n          children: label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FastField, {\n          name: name,\n          id: name,\n          children: _ref => {\n            let {\n              field\n            } = _ref;\n            return options.map(option => {\n              return /*#__PURE__*/_jsxDEV(Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"radio\",\n                  className: \"ms-3 me-1\",\n                  id: option.id,\n                  ...field,\n                  value: option.value,\n                  checked: field.value == option.value\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 53,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: option.id,\n                  children: option.value.charAt(0).toUpperCase() + option.value.slice(1, option.value.length)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 55,\n                  columnNumber: 41\n                }, this)]\n              }, option.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 37\n              }, this);\n            });\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true);\n    case \"checkbox\":\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: name,\n          children: label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FastField, {\n          name: name,\n          id: name,\n          children: _ref2 => {\n            let {\n              field\n            } = _ref2;\n            console.log(field);\n            return options.map(option => {\n              return /*#__PURE__*/_jsxDEV(Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  className: \"ms-3 me-1\",\n                  type: \"checkbox\",\n                  id: option.id,\n                  ...field,\n                  value: option.value,\n                  checked: field.value.includes(option.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 75,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: option.id,\n                  children: option.value\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 77,\n                  columnNumber: 41\n                }, this)]\n              }, option.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 37\n              }, this);\n            });\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true);\n    default:\n      return null;\n  }\n};\n_c = FieldControl;\nexport default FieldControl;\nvar _c;\n$RefreshReg$(_c, \"FieldControl\");","map":{"version":3,"names":["ErrorMessage","FastField","React","Fragment","ShowError","FieldControl","props","control","type","name","label","placeHolder","options","map","option","id","value","field","charAt","toUpperCase","slice","length","console","log","includes"],"sources":["C:/Users/tiger/Desktop/ReactJS/5- Use Redux/Use Redux/src/components/FieldControl.jsx"],"sourcesContent":["import { ErrorMessage, FastField } from 'formik';\r\nimport React, { Fragment } from 'react'\r\nimport ShowError from './ShowError';\r\n\r\nconst FieldControl = (props) => {\r\n    const {control , type , name , label , placeHolder , options} = props;\r\n\r\n    switch (control) {\r\n        case \"input\":\r\n            return (\r\n                <>\r\n                    <label className=\"form-label\" htmlFor={name}>{label}</label>\r\n                    <FastField type={type} className=\"form-control mb-1\" placeholder={placeHolder} id={name} name={name} />\r\n                    <ErrorMessage name={name} component={ShowError} />\r\n                </>\r\n            );\r\n            \r\n\r\n        case \"textarea\":\r\n            return (\r\n                <>\r\n                    <label className=\"form-label\" htmlFor={name}>{label}</label>\r\n                    <FastField className=\"form-control mb-1\" placeholder={placeHolder} id={name} name={name} component={control} />\r\n                    <ErrorMessage name={name} component={ShowError} />\r\n                </>\r\n            );\r\n            \r\n\r\n        case \"select\":\r\n            return (\r\n                <>\r\n                    <label htmlFor={name} className=\"me-3\">{label}</label>\r\n                    <FastField name={name} id={name} as=\"select\">\r\n                        {options.map(option => {\r\n                            return (\r\n                                <option value={option.id}>{option.value}</option>\r\n                            )\r\n                        })}\r\n                    </FastField>\r\n                </>\r\n            )\r\n            \r\n        \r\n        case \"radio\":\r\n            return(\r\n                <>\r\n                    <label htmlFor={name}>{label}</label>\r\n                    <FastField name={name} id={name}>\r\n                        {({field}) => {\r\n                            return options.map(option => {\r\n                                return (\r\n                                    <Fragment key={option.id}>\r\n                                        <input type=\"radio\" className=\"ms-3 me-1\" id={option.id} {...field} value={option.value} \r\n                                        checked={field.value == option.value} />\r\n                                        <label htmlFor={option.id}>{option.value.charAt(0).toUpperCase() + option.value.slice(1 , option.value.length)}</label>\r\n                                    </Fragment>\r\n                                )\r\n                            })\r\n                        }}\r\n                    </FastField>\r\n                </>\r\n            )\r\n            \r\n\r\n        case \"checkbox\":\r\n            return(\r\n                <>\r\n                    <label htmlFor={name}>{label}</label>\r\n                    <FastField name={name} id={name}>\r\n                        {({field}) => {\r\n                            console.log(field)\r\n                            return options.map(option => {\r\n                                return (\r\n                                    <Fragment key={option.id}>\r\n                                        <input className='ms-3 me-1' type=\"checkbox\" id={option.id} {...field} value={option.value} \r\n                                        checked={field.value.includes(option.value)} />\r\n                                        <label htmlFor={option.id}>{option.value}</label>\r\n                                    </Fragment>\r\n                                )\r\n                            })\r\n                        }}\r\n                    </FastField>\r\n                </>\r\n            )\r\n            \r\n    \r\n        default:\r\n            return null;\r\n            \r\n    }\r\n}\r\n\r\nexport default FieldControl;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}