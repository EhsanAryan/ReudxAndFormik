{"ast":null,"code":"const foodState = {\n  sandwich: 20,\n  pizza: 10\n};\nconst foodReducer = function () {\n  let prevState = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : foodState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case \"buy-sandwich\":\n      return {\n        ...prevState,\n        sandwich: prevState.sandwich - action.payload\n      };\n      break;\n    case \"buy-pizza\":\n      return {\n        ...prevState,\n        pizza: prevState.pizza - action.payload\n      };\n      break;\n    default:\n      return prevState;\n      break;\n  }\n};\nexport default foodReducer;","map":{"version":3,"names":["foodState","sandwich","pizza","foodReducer","prevState","action","type","payload"],"sources":["C:/Users/tiger/Desktop/ReactJS/5- React Redux Test/React Redux Test/src/Redux/food/foodReducer.js"],"sourcesContent":["const foodState = {\r\n    sandwich : 20 ,\r\n    pizza : 10\r\n}\r\n\r\nconst foodReducer = (prevState = foodState , action) => {\r\n    switch (action.type) {\r\n        case \"buy-sandwich\":\r\n            return {...prevState , sandwich : prevState.sandwich - action.payload};\r\n            break;\r\n\r\n        case \"buy-pizza\":\r\n            return {...prevState , pizza : prevState.pizza - action.payload};\r\n            break;\r\n        \r\n        default:\r\n            return prevState;\r\n            break;\r\n    }\r\n}\r\n\r\nexport default foodReducer;"],"mappings":"AAAA,MAAMA,SAAS,GAAG;EACdC,QAAQ,EAAG,EAAE;EACbC,KAAK,EAAG;AACZ,CAAC;AAED,MAAMC,WAAW,GAAG,YAAoC;EAAA,IAAnCC,SAAS,uEAAGJ,SAAS;EAAA,IAAGK,MAAM;EAC/C,QAAQA,MAAM,CAACC,IAAI;IACf,KAAK,cAAc;MACf,OAAO;QAAC,GAAGF,SAAS;QAAGH,QAAQ,EAAGG,SAAS,CAACH,QAAQ,GAAGI,MAAM,CAACE;MAAO,CAAC;MACtE;IAEJ,KAAK,WAAW;MACZ,OAAO;QAAC,GAAGH,SAAS;QAAGF,KAAK,EAAGE,SAAS,CAACF,KAAK,GAAGG,MAAM,CAACE;MAAO,CAAC;MAChE;IAEJ;MACI,OAAOH,SAAS;MAChB;EAAM;AAElB,CAAC;AAED,eAAeD,WAAW"},"metadata":{},"sourceType":"module"}